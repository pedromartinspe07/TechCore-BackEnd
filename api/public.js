// api/public.js

const express = require('express');
const router = express.Router();
const Noticia = require('../models/Noticia');
const Comentario = require('../models/Comentario');
const Resposta = require('../models/Resposta');
const jwt = require('jsonwebtoken'); //importa o jwt
const JWT_SECRET = process.env.JWT_SECRET || '04181818'; //segredo do JWT

// Middleware para validar token (exemplo b치sico)
function autenticarToken(req, res, next) {  //fun칞칚o para validar o token
  const token = req.headers['authorization']; //pega o token do header
  const decoded = jwt.verify(token, JWT_SECRET); //verifica se o token 칠 v치lido
  console.log(decoded);
  next(); //se o token for v치lido, passa para a pr칩xima fun칞칚o
}

router.use(autenticarToken); //usa o middleware para validar o token
router.use(autenticarToken); //usa o middleware para validar o token

router.get('/', (req, res) => { //rota para testar servidor
  res.send('游깷 API TechCore rodando com sucesso! - Rota p칰blica'); //retorna mensagem de sucesso
  console.log('游깷 API TechCore rodando com sucesso! - Rota p칰blica'); //console.log para testar
});

router.get('/noticias', async (req, res) => { //rota para buscar not칤cias
  const noticias = await Noticia.find(); //busca todas as not칤cias no banco de dados
  res.status(200).json(noticias); //retorna as not칤cias em formato JSON
  console.log(noticias); //console.log para testar
});

router.get('/noticias/:id', async (req, res) => { //rota para buscar not칤cia por id
  const noticia = await Noticia.findById(req.params.id); //busca a not칤cia por id
  res.status(200).json(noticia); //retorna a not칤cia em formato JSON
  console.log(noticia); //console.log para testar
});


router.get('/noticias/:id/comentarios', async (req, res) => { //rota para buscar coment치rios de uma not칤cia
  const comentarios = await Comentario.find({ noticia: req.params.id }); //busca todos os coment치rios da not칤cia por id
  res.status(200).json(comentarios); //retorna os coment치rios em formato JSON
  console.log(comentarios); //console.log para testar
});

router.get('/noticias/:id/comentarios/:id', async (req, res) => { //rota para buscar coment치rio por id
  const comentario = await Comentario.findById(req.params.id); //busca o coment치rio por id
  res.status(200).json(comentario); //retorna o coment치rio em formato JSON
  console.log(comentario); //console.log para testar
});

router.get('/noticias/:id/comentarios/:id/respostas', async (req, res) => { //rota para buscar respostas de um coment치rio
  const respostas = await Resposta.find({ comentario: req.params.id }); //busca todas as respostas do coment치rio por id
  res.status(200).json(respostas); //retorna as respostas em formato JSON
  console.log(respostas); //console.log para testar
});

router.get('/noticias/:id/comentarios/:id/respostas/:id', async (req, res) => { //rota para buscar resposta por id
  const resposta = await Resposta.findById(req.params.id); //busca a resposta por id
  res.status(200).json(resposta); //retorna a resposta em formato JSON
  console.log(resposta); //console.log para testar
});

module.exports = router;